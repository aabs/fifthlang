main(): int {
    std.print("BEFORE_CREATEGRAPH");
    g: graph = KG.CreateGraph();
    std.print("AFTER_CREATEGRAPH");

    std.print("BEFORE_CREATEURI");
    s: IUriNode = KG.CreateUri(g, "http://example.org/s1");
    std.print("AFTER_CREATEURI");

    std.print("BEFORE_CREATELITERAL");
    lit: ILiteralNode = KG.CreateLiteral(g, 42);
    std.print("AFTER_CREATELITERAL");

    std.print("BEFORE_CREATETRIPLE");
    t: triple = KG.CreateTriple(s, KG.CreateUri(g, "http://example.org/p"), lit);
    std.print("AFTER_CREATETRIPLE");

    std.print("BEFORE_ASSERT");
    KG.Assert(g, t);
    std.print("AFTER_ASSERT");

    std.print("TRIPLE_COUNT:");
    std.print(KG.CountTriples(g));

    return 0;
}
